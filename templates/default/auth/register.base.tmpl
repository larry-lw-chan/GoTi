{{ define "title" }}Goti Register{{ end }}

{{ define "content" }}
  <article class="register">
    <div class="header">
      <h1 class="header__heading">Let's get you setup</h1>
      <p class="header__description">
        Let's get you set up on goti. We just need a few details from you to get
        started.
      </p>
    </div>
    <form
      action="/auth/register"
      method="POST"
      id="register__form"
      autocomplete="off"
      novalidate="novalidate"
    >
      <fieldset>
        <input
          type="email"
          name="email"
          id="email"
          placeholder="Email"
          autocomplete="email"
          aria-label="Email"
          class="register__input"
          required
        />
      </fieldset>
      <fieldset>
        <input
          type="password"
          name="password"
          id="password"
          placeholder="Password"
          aria-label="Password"
          class="register__input"
        />
      </fieldset>
      <fieldset>
        <input
          type="password"
          name="confirm_password"
          id="confirm_password"
          placeholder="Confirm Password"
          aria-label="Password"
          class="register__input"
        />
      </fieldset>
      <fieldset>
        <label for="privacy" class="register__label">
          <input
            type="checkbox"
            name="privacy"
            id="privacy"
            class="register__checkbox"
            required
          />
          I have read and agree to the
          <a href="/pages/privacy" target="_blank">privacy policy</a> *
        </label>
      </fieldset>
      <button type="submit" class="register__button">Register</button>
    </form>

    <div class="links">
      <a href="/users/login" class="links__link">Login Instead?</a>
    </div>
  </article>
{{ end }}

{{ define "script" }}
  <script type="text/javascript">
    // Validate Registration Form
    const validator = new window.JustValidate("#register__form");
    validator
      .addField("#email", [
        {
          rule: "required",
          message: "Email is required",
        },
        {
          rule: "email",
          message: "Please enter a valid email",
        },
      ])
      .addField("#password", [
        {
          rule: "required",
          message: "Password is required",
        },
        {
          rule: "minLength",
          value: 8,
          message: "Password should be at least 8 characters",
        },
      ])
      .addField("#confirm_password", [
        {
          rule: "required",
          message: "Confirm Password is required",
        },
        {
          rule: "minLength",
          value: 8,
          message: "Password should be at least 8 characters",
        },
        {
          validator: (value, fields) => {
            if (fields["#password"] && fields["#confirm_password"].elem) {
              const repeatPasswordValue = fields["#password"].elem.value;

              return value === repeatPasswordValue;
            }

            return true;
          },
          errorMessage: "Passwords should be the same",
        },
      ])
      .addField("#privacy", [
        {
          rule: "required",
        },
      ])
      .onSuccess((event) => {
        document.getElementById("register__form").submit();
      });
  </script>
  //
{{ end }}
