// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package threads

import (
	"context"
	"database/sql"
)

const createThread = `-- name: CreateThread :one
INSERT INTO threads (content, thread_id, user_id, created_at, updated_at)
VALUES (?, ?, ?, ?, ?)
RETURNING id, content, thread_id, user_id, created_at, updated_at, "foreign"
`

type CreateThreadParams struct {
	Content   string
	ThreadID  sql.NullInt64
	UserID    int64
	CreatedAt string
	UpdatedAt string
}

func (q *Queries) CreateThread(ctx context.Context, arg CreateThreadParams) (Thread, error) {
	row := q.db.QueryRowContext(ctx, createThread,
		arg.Content,
		arg.ThreadID,
		arg.UserID,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Thread
	err := row.Scan(
		&i.ID,
		&i.Content,
		&i.ThreadID,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Foreign,
	)
	return i, err
}
